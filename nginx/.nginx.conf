load_module /etc/nginx/modules/ngx_http_image_filter_module.so;
user  nginx;
worker_processes auto;
worker_rlimit_nofile 100000;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    # notice: should be think worker_connections number.
    worker_connections  1024;
    multi_accept on;
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    # -----------------------------------------
    # error page
    # -----------------------------------------
    error_page 400 /400.json;
    error_page 404 /404.json;
    error_page 405 /405.json;
    error_page 415 /415.json;
    error_page 502 /502.json;
    error_page 503 /503.json;
    error_page 504 /504.json;

    # -----------------------------------------
    # security
    # -----------------------------------------
    server_tokens off;
    autoindex off;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;
    #add_header Content-Security-Policy "default-src 'self'";
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;

    # -----------------------------------------
    # application
    # -----------------------------------------
    client_max_body_size 11M;

    # -----------------------------------------
    # performance
    # -----------------------------------------
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    # Specify at least 60 seconds of ALB timeout. 
    keepalive_timeout 65;
    reset_timedout_connection on;
    #client_header_timeout 10;
    #client_body_timeout 10;
    #send_timeout 10;
    #limit_conn_zone $binary_remote_addr zone=addr:5m;
    #limit_conn addr 100;
    gzip on;
    gzip_http_version 1.0;
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/json;
    open_file_cache max=100000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # added the server block
    server {
        listen 80;
        proxy_request_buffering off;

        location ~ ^/resize/(.*)/image/(.*)$ {
            resolver 8.8.8.8 valid=2s;
            set $s3_bucket        's3-ap-northeast-1.amazonaws.com';

            proxy_http_version     1.1;
            proxy_hide_header      server;
            proxy_hide_header      x-amz-delete-marker;
            proxy_hide_header      x-amz-id-2;
            proxy_hide_header      x-amz-request-id;
            proxy_hide_header      x-amz-version-id;
            proxy_intercept_errors on;

            set $size $1;
            set $file $2;
            if ($size !~ (300|800|1600)) {
                return 400;
            }

            image_filter resize $size $size;
            image_filter_jpeg_quality 95;
            image_filter_buffer 10M;
            # app comes from /etc/hosts, Docker added it for us!
            proxy_pass https://$s3_bucket/$file;
        }

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # app comes from /etc/hosts, Docker added it for us!
            proxy_pass http://GO_HOST:8080;
        }

        location ~ /[0-9]+.json {
            root /etc/nginx/error;
            allow all;
        }

        # alb health check stub page.
        location ~ /nginx_status {
            stub_status on;
            access_log off;
            # dev alb
            allow 10.2.1.0/24;
            allow 10.2.2.0/24;
            # stg alb
            allow 10.1.1.0/24;
            allow 10.1.2.0/24;
            # prod alb
            allow 10.0.1.0/24;
            allow 10.0.2.0/24;
            # localhost
            allow 127.0.0.1;
            deny all;
        }
    }
}